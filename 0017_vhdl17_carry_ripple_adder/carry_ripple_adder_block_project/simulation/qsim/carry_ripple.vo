// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.1.0 Build 625 09/12/2018 SJ Standard Edition"

// DATE "07/14/2019 15:15:05"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module carry_ripple (
	CARRY_OUT,
	A3,
	B3,
	A2,
	B2,
	A1,
	B1,
	A0,
	B0,
	CARRY_IN,
	S3,
	S2,
	S1,
	S0);
output 	CARRY_OUT;
input 	A3;
input 	B3;
input 	A2;
input 	B2;
input 	A1;
input 	B1;
input 	A0;
input 	B0;
input 	CARRY_IN;
output 	S3;
output 	S2;
output 	S1;
output 	S0;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \CARRY_OUT~output_o ;
wire \S3~output_o ;
wire \S2~output_o ;
wire \S1~output_o ;
wire \S0~output_o ;
wire \A3~input_o ;
wire \B3~input_o ;
wire \A2~input_o ;
wire \B2~input_o ;
wire \A1~input_o ;
wire \B1~input_o ;
wire \CARRY_IN~input_o ;
wire \A0~input_o ;
wire \B0~input_o ;
wire \inst2|inst2~combout ;
wire \inst|inst2~combout ;
wire \inst|inst1|inst~combout ;
wire \inst1|inst1|inst~combout ;
wire \inst2|inst1|inst~combout ;
wire \inst3|inst1|inst~combout ;


cyclonev_io_obuf \CARRY_OUT~output (
	.i(\inst|inst2~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\CARRY_OUT~output_o ),
	.obar());
// synopsys translate_off
defparam \CARRY_OUT~output .bus_hold = "false";
defparam \CARRY_OUT~output .open_drain_output = "false";
defparam \CARRY_OUT~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \S3~output (
	.i(\inst|inst1|inst~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S3~output_o ),
	.obar());
// synopsys translate_off
defparam \S3~output .bus_hold = "false";
defparam \S3~output .open_drain_output = "false";
defparam \S3~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \S2~output (
	.i(\inst1|inst1|inst~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S2~output_o ),
	.obar());
// synopsys translate_off
defparam \S2~output .bus_hold = "false";
defparam \S2~output .open_drain_output = "false";
defparam \S2~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \S1~output (
	.i(\inst2|inst1|inst~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S1~output_o ),
	.obar());
// synopsys translate_off
defparam \S1~output .bus_hold = "false";
defparam \S1~output .open_drain_output = "false";
defparam \S1~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \S0~output (
	.i(\inst3|inst1|inst~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S0~output_o ),
	.obar());
// synopsys translate_off
defparam \S0~output .bus_hold = "false";
defparam \S0~output .open_drain_output = "false";
defparam \S0~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \A3~input (
	.i(A3),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A3~input_o ));
// synopsys translate_off
defparam \A3~input .bus_hold = "false";
defparam \A3~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \B3~input (
	.i(B3),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\B3~input_o ));
// synopsys translate_off
defparam \B3~input .bus_hold = "false";
defparam \B3~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \A2~input (
	.i(A2),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A2~input_o ));
// synopsys translate_off
defparam \A2~input .bus_hold = "false";
defparam \A2~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \B2~input (
	.i(B2),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\B2~input_o ));
// synopsys translate_off
defparam \B2~input .bus_hold = "false";
defparam \B2~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \A1~input (
	.i(A1),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A1~input_o ));
// synopsys translate_off
defparam \A1~input .bus_hold = "false";
defparam \A1~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \B1~input (
	.i(B1),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\B1~input_o ));
// synopsys translate_off
defparam \B1~input .bus_hold = "false";
defparam \B1~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \CARRY_IN~input (
	.i(CARRY_IN),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\CARRY_IN~input_o ));
// synopsys translate_off
defparam \CARRY_IN~input .bus_hold = "false";
defparam \CARRY_IN~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \A0~input (
	.i(A0),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A0~input_o ));
// synopsys translate_off
defparam \A0~input .bus_hold = "false";
defparam \A0~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \B0~input (
	.i(B0),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\B0~input_o ));
// synopsys translate_off
defparam \B0~input .bus_hold = "false";
defparam \B0~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst2|inst2 (
// Equation(s):
// \inst2|inst2~combout  = ( \B0~input_o  & ( (!\A1~input_o  & (\B1~input_o  & ((\A0~input_o ) # (\CARRY_IN~input_o )))) # (\A1~input_o  & (((\A0~input_o ) # (\CARRY_IN~input_o )) # (\B1~input_o ))) ) ) # ( !\B0~input_o  & ( (!\A1~input_o  & (\B1~input_o  & 
// (\CARRY_IN~input_o  & \A0~input_o ))) # (\A1~input_o  & (((\CARRY_IN~input_o  & \A0~input_o )) # (\B1~input_o ))) ) )

	.dataa(!\A1~input_o ),
	.datab(!\B1~input_o ),
	.datac(!\CARRY_IN~input_o ),
	.datad(!\A0~input_o ),
	.datae(!\B0~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst2|inst2~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst2|inst2 .extended_lut = "off";
defparam \inst2|inst2 .lut_mask = 64'h1117177711171777;
defparam \inst2|inst2 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|inst2 (
// Equation(s):
// \inst|inst2~combout  = ( \inst2|inst2~combout  & ( (!\A3~input_o  & (\B3~input_o  & ((\B2~input_o ) # (\A2~input_o )))) # (\A3~input_o  & (((\B2~input_o ) # (\A2~input_o )) # (\B3~input_o ))) ) ) # ( !\inst2|inst2~combout  & ( (!\A3~input_o  & 
// (\B3~input_o  & (\A2~input_o  & \B2~input_o ))) # (\A3~input_o  & (((\A2~input_o  & \B2~input_o )) # (\B3~input_o ))) ) )

	.dataa(!\A3~input_o ),
	.datab(!\B3~input_o ),
	.datac(!\A2~input_o ),
	.datad(!\B2~input_o ),
	.datae(!\inst2|inst2~combout ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|inst2~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|inst2 .extended_lut = "off";
defparam \inst|inst2 .lut_mask = 64'h1117177711171777;
defparam \inst|inst2 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst|inst1|inst (
// Equation(s):
// \inst|inst1|inst~combout  = ( \inst2|inst2~combout  & ( !\A3~input_o  $ (!\B3~input_o  $ (((\B2~input_o ) # (\A2~input_o )))) ) ) # ( !\inst2|inst2~combout  & ( !\A3~input_o  $ (!\B3~input_o  $ (((\A2~input_o  & \B2~input_o )))) ) )

	.dataa(!\A3~input_o ),
	.datab(!\B3~input_o ),
	.datac(!\A2~input_o ),
	.datad(!\B2~input_o ),
	.datae(!\inst2|inst2~combout ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|inst1|inst~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|inst1|inst .extended_lut = "off";
defparam \inst|inst1|inst .lut_mask = 64'h6669699966696999;
defparam \inst|inst1|inst .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst1|inst1|inst (
// Equation(s):
// \inst1|inst1|inst~combout  = !\A2~input_o  $ (!\B2~input_o  $ (\inst2|inst2~combout ))

	.dataa(!\A2~input_o ),
	.datab(!\B2~input_o ),
	.datac(!\inst2|inst2~combout ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst1|inst1|inst~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst1|inst1|inst .extended_lut = "off";
defparam \inst1|inst1|inst .lut_mask = 64'h6969696969696969;
defparam \inst1|inst1|inst .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst2|inst1|inst (
// Equation(s):
// \inst2|inst1|inst~combout  = ( \B0~input_o  & ( !\A1~input_o  $ (!\B1~input_o  $ (((\A0~input_o ) # (\CARRY_IN~input_o )))) ) ) # ( !\B0~input_o  & ( !\A1~input_o  $ (!\B1~input_o  $ (((\CARRY_IN~input_o  & \A0~input_o )))) ) )

	.dataa(!\A1~input_o ),
	.datab(!\B1~input_o ),
	.datac(!\CARRY_IN~input_o ),
	.datad(!\A0~input_o ),
	.datae(!\B0~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst2|inst1|inst~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst2|inst1|inst .extended_lut = "off";
defparam \inst2|inst1|inst .lut_mask = 64'h6669699966696999;
defparam \inst2|inst1|inst .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \inst3|inst1|inst (
// Equation(s):
// \inst3|inst1|inst~combout  = !\CARRY_IN~input_o  $ (!\A0~input_o  $ (\B0~input_o ))

	.dataa(!\CARRY_IN~input_o ),
	.datab(!\A0~input_o ),
	.datac(!\B0~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst3|inst1|inst~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst3|inst1|inst .extended_lut = "off";
defparam \inst3|inst1|inst .lut_mask = 64'h6969696969696969;
defparam \inst3|inst1|inst .shared_arith = "off";
// synopsys translate_on

assign CARRY_OUT = \CARRY_OUT~output_o ;

assign S3 = \S3~output_o ;

assign S2 = \S2~output_o ;

assign S1 = \S1~output_o ;

assign S0 = \S0~output_o ;

endmodule
